def make_delivery_statistics_d():
    # parameters
    min_x, max_x = 0, 20
    min_y, max_y = 0, 20

    # numbers
    M = 2  # number of homogeneous trucks in the fleet
    N = 1  # number of drones on each truck
    P = 4  # number of packages
    D = 5  # number of depots

    # [Model] initial location
    initial_state = {
        "LT0": 0, "xT0": 0, "yT0": 0,
        "LT1": 0, "xT1": 0, "yT1": 0,
        "xD0-0": 0, "yD0-0": 0,
        "xD1-0": 0, "yD1-0": 0,
        "xP0": 0, "yP0": 0, "cP0": 0, "LP0": 0,
        "xP1": 0, "yP1": 0, "cP1": 0, "LP1": 0,
        "xP2": 0, "yP2": 0, "cP2": 0, "LP2": 0,
        "xP3": 0, "yP3": 0, "cP3": 0, "LP3": 0}

    # [Model] goals
    goal_states = {"LP0": 1,
                   "LP1": 1,
                   "LP2": 1,
                   "LP3": 1, }

    # model specifications
    package_tasks = {"P0": [0, 20, 0.5],
                     "P1": [5, 15, 2],
                     "P2": [20, 0, 4],
                     "P3": [15, 5, 5]}

    # model specifications
    depots = [(0, 0), (0, 10), (10, 0), (10, 10), (0, 20)]  # depots
    paths = [(0, 0), (1, 1), (2, 2), (3, 3), (4, 4),
             (0, 1), (1, 0),
             (0, 2), (2, 0),
             (1, 3), (3, 1),
             (2, 3), (3, 2),
             (1, 4), (4, 1)]
    path_shapes = {
        "0-0": ([0, 0], [0, 0], {}),
        "1-1": ([0, 0], [10, 10], {}),
        "2-2": ([10, 10], [0, 0], {}),
        "3-3": ([10, 10], [10, 10], {}),
        "4-4": ([0, 0], [20, 20], {}),
        "0-1": ([0, 0], [0, 10], [1, 0, 0]),
        "1-0": ([0, 0], [0, 10], [1, 0, 0]),
        "0-2": ([0, 10], [0, 0], [0, 1, 0]),
        "2-0": ([0, 10], [0, 0], [0, 1, 0]),
        "1-3": ([0, 10], [10, 10], [0, 1, -10]),
        "3-1": ([0, 10], [10, 10], [0, 1, -10]),
        "2-3": ([10, 10], [0, 10], [1, 0, -10]),
        "3-2": ([10, 10], [0, 10], [1, 0, -10]),
        "1-4": ([0, 0], [10, 20], [1, 0, 0]),
        "4-1": ([0, 0], [10, 20], [1, 0, 0])}
    truck_speed_bounds = {
        "0-0": ([0, 0], [0, 0], []),
        "1-1": ([0, 0], [0, 0], []),
        "2-2": ([0, 0], [0, 0], []),
        "3-3": ([0, 0], [0, 0], []),
        "4-4": ([0, 0], [0, 0], []),
        "0-1": ([0, 0], [30 / 60, 50 / 60], [1, 0, 0]),
        "1-0": ([0, 0], [-50 / 60, -30 / 60], [1, 0, 0]),
        "0-2": ([30 / 60, 50 / 60], [0, 0], [0, 1, 0]),
        "2-0": ([-50 / 60, -30 / 60], [0, 0], [0, 1, 0]),
        "1-3": ([30 / 60, 50 / 60], [0, 0], [0, 1, 0]),
        "3-1": ([-50 / 60, -30 / 60], [0, 0], [0, 1, 0]),
        "2-3": ([0, 0], [30 / 60, 50 / 60], [1, 0, 0]),
        "3-2": ([0, 0], [-50 / 60, -30 / 60], [1, 0, 0]),
        "1-4": ([0, 0], [30 / 60, 50 / 60], [1, 0, 0]),
        "4-1": ([0, 0], [-50 / 60, -30 / 60], [1, 0, 0])}

    drone_speed_bound = [-5 / 60, 5 / 60]  # TODO

    stats = {"M": M, "N": N, "P": P, "D": D,
             "depots": depots, "paths": paths, "path_shapes": path_shapes,
             "truck_speed_bounds": truck_speed_bounds, "drone_speed_bound": drone_speed_bound,
             "min_x": min_x, "max_x": max_x, "min_y": min_y, "max_y": max_y,
             "initial_state": initial_state, "goal_states": goal_states, "package_tasks": package_tasks}

    return stats